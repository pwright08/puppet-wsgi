#!/usr/bin/env bash
# Startup script for Land Registry's <%= @name %> WSGI application

# Port the application should listen on
export PORT=<%= @bind %>

# Load environment variables and immediatly override with any deployment varables
echo 'Loading environment variables...'
source <%= @cfg_file  %>
source <%= @dep_file  %>

# Ensure python can find modules correctly
PYTHONPATH='<%= @code_dir %>'
cd <%= @code_dir %>

<%- if @manage == true -%>
# Run database migration if manage.py script exists
if [ -f '<%= @code_dir %>/manage.py' ]; then
  echo 'Running migration script...'
  PYTHON='<%= @venv_dir %>/bin/python'
  $PYTHON <%= @code_dir %>/manage.py db upgrade
  # If the migration doesn't happen successfully, die
  if [ $? != '0' ]; then
    echo 'Migration script failed to run successfully'
    exit 1
  fi
fi
<%- end -%>

echo 'Re-Loading standard environment variables...'
source <%= @cfg_file  %>

# Logging configuration
ACCESS_LOG='<%= @access_log %>'
ERROR_LOG='<%= @error_log %>'
APPLICATION_LOG='<%= @application_log %>'

# Run time
echo "Starting web service on ${PORT}..."
GUNICORN='<%= @venv_dir %>/bin/gunicorn'
$GUNICORN --bind           0.0.0.0:${PORT} \
          --name           <%= @service  %> \
          --pid            '<%= @pid_file %>' \
          --chdir          '<%= @code_dir %>/' \
          --error-logfile  ${ERROR_LOG} \
          --access-logfile ${ACCESS_LOG} \
          --log-level      <%= @log_level %> \
          --workers        <%= @workers %> \
          --threads        <%= @threads %> \
          <%= @extra_args %> \
          "<%= @wsgi_entry %>" > >(tee -a ${APPLICATION_LOG}) 2> >(tee -a ${APPLICATION_LOG} >&2)
